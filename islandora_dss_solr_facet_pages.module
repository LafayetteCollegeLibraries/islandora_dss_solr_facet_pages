<?php

  /**
   * @file Core functionality for the faceted browsing of Solr-indexed Fedora Commons Objects
   * @author griffinj@lafayette.edu
   *
   */

require_once __DIR__ . '/includes/islandora_solr_facet_pages.inc';
require_once __DIR__ . '/includes/blocks.inc';
require_once __DIR__ . '/theme/theme.inc';

function islandora_dss_solr_facet_pages_preprocess_islandora_solr_facet_pages_results(&$vars) {

  $vars['complex_results'] = array();

  foreach($vars['results'] as $result => $count) {

    $class = array('islandora-solr-facet');

    switch($vars['solr_field']) {
    case 'eastasia.Date.Artifact.Upper':
    case 'eastasia.Date.Artifact.Lower':
    case 'eastasia.Date.Image.Upper':
    case 'eastasia.Date.Image.Lower':
      
      $filter = $vars['solr_field'] . ':"' . addslashes($result) . 'T00:00:00Z"';
    $class[] = 'islandora-solr-facet-date';
      break;

    default:
      $filter = $vars['solr_field'] . ':"' . addslashes($result) . '"';
    }

    /**
     * For removing "----" and "_empty_" values created by the DC XSLT upon the updating of datastream content
     *
     */
    if(in_array($result, array('----', '_empty_'))) {

      continue;
    }

    $vars['complex_results'][$result] = array('count' => $count,
					      'filter' => $filter,
					      'class' => $class);
  }
}

function islandora_dss_solr_facet_pages_block_view(&$data, $block) {

  switch($block->delta) {
    
  case 'islandora-solr-facet-pages':
    
    dpm(array());
    break;

  default:
    break;
  }
}

/**
 * Implements hook_block_view_MODULE_DELTA_alter()
 *
 */
function islandora_dss_solr_facet_pages_block_view_islandora_solr_facet_pages_islandora_solr_facet_pages_alter(&$data, $block) {

  dpm($data);
  dpm($block);
}

/**
 * The form for refining searches by utilizing all possible facet values
 * Intended to be rendered using a JavaScript widget, hence, there are no implementations of submission or validation callbacks
 *
 */
function islandora_dss_solr_facet_pages_facets_form($form, &$form_state, $solr_field, $solr_query='*:*', $facets=array()) {

  $solr_query = implode(' AND ', array_merge(array($solr_query), $facets));

  $prefix = t('ALL');
  drupal_load('module', 'islandora_solr');

  // Use Solr faceting to get list of names.
  $parsed_url = parse_url(variable_get('islandora_solr_url', 'http://localhost:8080/solr'));
  $solr = new Apache_Solr_Service($parsed_url['host'], $parsed_url['port'], $parsed_url['path']);

  // Collect results.
  $result_fields = _islandora_dss_solr_facet_pages_results($solr, $solr_field, $prefix, $solr_query);
  // Collect results with lowercase.
  $prefix_lower = strtolower($prefix);

  $result_fields_lower = _islandora_dss_solr_facet_pages_results($solr, $solr_field, $prefix_lower, $solr_query);

  // Merge uppercase with lowercase.
  //$result_fields = array_merge($result_fields, $result_fields_lower);

  /**
   * Odd work-around; Uncertain as to how this behavior occurred (PHP core update?)
   * Resolves DSSSM-751
   *
   */
  if($solr_field == 'war_casualties.description.class' or
     $solr_field == 'MODS.mods.relatedItem.part.detail.volume.number_i') {

    $_result_fields = array();

    foreach(array($result_fields, $result_fields_lower) as $result_field_subset) {

      foreach($result_field_subset as $facet => $count) {

	$_result_fields[$facet] = $count;
      }
    }

    $result_fields = $_result_fields;
  } else {

    // Merge uppercase with lowercase.
    $result_fields = array_merge($result_fields, $result_fields_lower);
  }

  /**
   * Anomalous sorting for faceted values on certain fields (such as "Volume" for the "Alumni Publications" Collection)
   * Resolves DSSSM-1081
   * @todo Implement
   *
   */
  if(in_array($solr_field, array('MODS.mods.originInfo.publisher_s',
				 'MODS.mods.relatedItem.titleInfo.title_s'))) {

    // Sort ascending by the facet values
    ksort($result_fields);
  } elseif(in_array($solr_field, array('MODS.mods.relatedItem.part.detail.volume.number_i'))) {

    // Sort descending by the facet values
    krsort($result_fields);
  } else {

    // Sort by the most populated facets
    arsort($result_fields);
  }

  switch($solr_field) {

  case 'eastasia.Date.Artifact.Upper':
  case 'eastasia.Date.Artifact.Lower':
  case 'eastasia.Date.Image.Upper':
  case 'eastasia.Date.Image.Lower':
  case 'geology_slides_esi.date.original':

    $_result_fields = array();

    foreach($result_fields as $result_field => $value) {

      $_result_fields[gmdate('Y-m-d', strtotime($result_field))] = $value;
    }

    $result_fields = $_result_fields;
    break;
  }

  /**
   * Refine for anomalous cases (e. g. browsing the contents of the repository)
   * Resolves DSSSM-682
   * @todo Refactor with variable_get()
   *
   */
  $islandora_dss_solr_facet_pages_TOP_COLLECTIONS = array('East Asia Image Collection',
							  'Lafayette Newspaper Collection',
							  'Historical Photograph Collection',
							  'Marquis de Lafayette Prints Collection',
							  'Geology Department Slide Collection',
							  'McKelvy House Photograph Collection',
							  'Lafayette World War II Casualties',
							  'Lafayette Magazine Collection'
							  );

  $options = array();
  foreach($result_fields as $result_field => $count) {

    if(!in_array("$solr_field:\"$result_field\"", $facets)) {

      /**
       * Refine for anomalous cases (e. g. browsing the contents of the repository)
       * Resolves DSSSM-682
       *
       */
      if(($solr_query == '*:*' and in_array($result_field, $islandora_dss_solr_facet_pages_TOP_COLLECTIONS)) or $solr_query != '*:*') {

	$options[$result_field] = "<span>$result_field</span>" . "&nbsp;<span class='bucket-size'>($count)</span>";
      }
    }
  }

  $form['islandora_solr_facets'] = array('fields' => array('#type' => 'checkboxes',
							   //'#options' => drupal_map_assoc(array_keys($result_fields)),
							   '#options' => $options,
							   ),
					 'submit' => array('#type' => 'submit',
							   '#value' => t('Refine'),
							   )
					 );

  return $form;
}

/**
 * Callback for the AJAX endpoint
 * Responds with a 403 for non-AJAX requests
 *
 */
function _islandora_dss_solr_facet_pages_facets($paths, $solr_field) {

  //if(!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest') {
  if(true) {

    /*
    if(array_key_exists('q', $_GET)) {

      $query = $_GET['q'];
    } else {

      $query = '*:*';
    }
    */

    $query = '*:*';

    $facets = array();
    if(array_key_exists('query', $_GET)) {

      $query = $_GET['query'];
    } elseif(array_key_exists('query', $_POST)) {

      $query = $_POST['query'];
    }

    /**
     * Removes URL fragments
     *
     */
    $query = array_shift(explode('#', $query));

    if(array_key_exists('f', $_GET)) {

      $facets = $_GET['f'];
    } elseif(array_key_exists('f', $_POST)) {

      $facets = $_POST['f'];
    }

    //print drupal_render(drupal_get_form('islandora_dss_solr_facet_pages_facets_form', $solr_field, $solr_query));
    print drupal_render(drupal_get_form('islandora_dss_solr_facet_pages_facets_form', $solr_field, $query, $facets));
    exit;
  } else {

    drupal_access_denied();
  }
}

/**
 * Implements hook_menu()
 *
 */
function islandora_dss_solr_facet_pages_menu() {

  $items['islandora/facets'] = array('page callback' => '_islandora_dss_solr_facet_pages_facets',
				     'page arguments' => array(3),
				     'access arguments' => array('search islandora solr'),
				     'type' => MENU_CALLBACK,
				     );

  return $items;
}

/**
 * Implements hook_theme_registry_alter()
 *
 */
function islandora_dss_solr_facet_pages_theme_registry_alter(&$theme_registry) {

  $theme_registry['islandora_solr_facet_pages_letterer']['path'] = drupal_get_path('module', 'islandora_dss_solr_facet_pages') . '/includes';
  $theme_registry['islandora_solr_facet_pages_letterer']['file'] = 'islandora_solr_facet_pages.inc';

  //dpm( $theme_registry['islandora_solr_facet_pages_results']);
  $theme_registry['islandora_solr_facet_pages_results']['path'] = drupal_get_path('module', 'islandora_dss_solr_facet_pages') . '/theme';
  $theme_registry['islandora_solr_facet_pages_results']['file'] = 'theme.inc';
  $theme_registry['islandora_solr_facet_pages_results']['includes'][] = drupal_get_path('module', 'islandora_dss_solr_facet_pages') . '/theme/theme.inc';
  //dpm( $theme_registry['islandora_solr_facet_pages_results']);

}